{"ast":null,"code":"import axios from 'axios';\n\nfunction create(data) {\n  var url = '/lyrics/';\n  var config = {\n    method: 'POST',\n    data: data\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nfunction getAll() {\n  var url = '/lyrics/';\n  var config = {\n    method: 'GET',\n    data: data\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nfunction getById(id) {\n  var url = '/lyrics/' + id;\n  var config = {\n    method: 'GET',\n    data: data\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nfunction update(id, data) {\n  var url = '/lyrics/' + id;\n  var config = {\n    method: 'PUT',\n    data: data\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nfunction deleteById(id) {\n  var url = '/lyrics/' + id;\n  var config = {\n    method: 'DELETE',\n    data: data\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nvar responseSuccess = function responseSuccess(response) {\n  console.log(response);\n  return response.data;\n};\n\nvar responseError = function responseError(error) {\n  if (error && error.response && error.response.data && error.response.data.errors) {\n    console.log(error.response.data.errors);\n  } else {\n    console.log(error);\n  }\n\n  return Promise.reject(error);\n};\n\nexport { create };","map":{"version":3,"sources":["C:\\SF.Code\\myCrudApp\\client\\src\\services\\lyricService.js"],"names":["axios","create","data","url","config","method","then","responseSuccess","catch","responseError","getAll","getById","id","update","deleteById","response","console","log","error","errors","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAClB,MAAMC,GAAG,GAAE,UAAX;AAEA,MAAMC,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,MADE;AAETH,IAAAA,IAAI,EAACA;AAFI,GAAb;AAIA,SAAOF,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,SAASC,MAAT,GAAkB;AACd,MAAMP,GAAG,GAAE,UAAX;AAEA,MAAMC,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,KADE;AAETH,IAAAA,IAAI,EAACA;AAFI,GAAb;AAIA,SAAOF,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AACD,SAASE,OAAT,CAAiBC,EAAjB,EAAqB;AACjB,MAAMT,GAAG,GAAE,aAAWS,EAAtB;AAEA,MAAMR,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,KADE;AAETH,IAAAA,IAAI,EAACA;AAFI,GAAb;AAIA,SAAOF,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,SAASI,MAAT,CAAgBD,EAAhB,EAAoBV,IAApB,EAA0B;AACtB,MAAMC,GAAG,GAAE,aAAWS,EAAtB;AAEA,MAAMR,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,KADE;AAETH,IAAAA,IAAI,EAACA;AAFI,GAAb;AAIA,SAAOF,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,SAASK,UAAT,CAAoBF,EAApB,EAAwB;AACpB,MAAMT,GAAG,GAAE,aAAWS,EAAtB;AAEA,MAAMR,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,QADE;AAETH,IAAAA,IAAI,EAACA;AAFI,GAAb;AAIA,SAAOF,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,IAAMF,eAAe,GAAG,SAAlBA,eAAkB,CAAAQ,QAAQ,EAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAOA,QAAQ,CAACb,IAAhB;AACH,CAHD;;AAKA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAS,KAAK,EAAI;AAC3B,MAAIA,KAAK,IAAIA,KAAK,CAACH,QAAf,IAA2BG,KAAK,CAACH,QAAN,CAAeb,IAA1C,IAAkDgB,KAAK,CAACH,QAAN,CAAeb,IAAf,CAAoBiB,MAA1E,EAAkF;AAC9EH,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACH,QAAN,CAAeb,IAAf,CAAoBiB,MAAhC;AACH,GAFD,MAEO;AACHH,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;;AACD,SAAOE,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH,CAPD;;AAQA,SAAQjB,MAAR","sourcesContent":["import axios from 'axios';\r\n\r\nfunction create(data) {\r\n    const url= '/lyrics/'\r\n    \r\n    const config={\r\n        method:'POST',\r\n        data:data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nfunction getAll() {\r\n    const url= '/lyrics/'\r\n    \r\n    const config={\r\n        method:'GET',\r\n        data:data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\nfunction getById(id) {\r\n    const url= '/lyrics/'+id\r\n    \r\n    const config={\r\n        method:'GET',\r\n        data:data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nfunction update(id, data) {\r\n    const url= '/lyrics/'+id\r\n    \r\n    const config={\r\n        method:'PUT',\r\n        data:data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nfunction deleteById(id) {\r\n    const url= '/lyrics/'+id\r\n    \r\n    const config={\r\n        method:'DELETE',\r\n        data:data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nconst responseSuccess = response => {\r\n    console.log(response);\r\n    return response.data\r\n}\r\n\r\nconst responseError = error => {\r\n    if (error && error.response && error.response.data && error.response.data.errors) {\r\n        console.log(error.response.data.errors)\r\n    } else {\r\n        console.log(error);\r\n    }\r\n    return Promise.reject(error);\r\n}\r\nexport {create}"]},"metadata":{},"sourceType":"module"}