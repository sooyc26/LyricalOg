{"ast":null,"code":"import axios from 'axios';\n\nfunction create(data) {\n  var url = 'http://localhost:49694/api/lyrics';\n  var config = {\n    method: 'POST',\n    data: data //withCredentials: true\n\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nfunction getAll() {\n  var url = 'http://localhost:49694/api/lyrics';\n  var config = {\n    method: 'GET' //withCredentials: true\n\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nfunction getById(id) {\n  var url = 'http://localhost:49694/api/lyrics/' + id;\n  return axios.get(url).then(responseSuccess).catch(responseError);\n}\n\nfunction update(id, data) {\n  var url = 'http://localhost:49694/api/lyrics/' + id;\n  var config = {\n    method: 'PUT',\n    data: data\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nfunction deleteById(id) {\n  var url = 'http://localhost:49694/api/lyrics/' + id;\n  var config = {\n    method: 'DELETE'\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nvar responseSuccess = function responseSuccess(response) {\n  console.log(response);\n  return response.data;\n};\n\nvar responseError = function responseError(error) {\n  if (error && error.response && error.response.data && error.response.data.errors) {\n    console.log(error.response.data.errors);\n  } else {\n    console.log(error);\n  }\n\n  return Promise.reject(error);\n};\n\nexport { create, getAll, getById, update, deleteById };\n/*\r\nsplit an array and add the splitted items at end of the array\r\nexample {2,3,4,5,6}\r\n{4,5,6,2,3}\r\n\r\nlet returnArray=[];\r\nfor (let i=2; i<array.length;i++){\r\n\treturnArray.push(array[i])\r\n}\r\n\r\nreturnArray.push(array[0]);\r\nreturnArray.push(array[1]);\r\n\r\nreturn returnArray;\r\n\r\nO(n)\r\n\r\nCan you create a component with text box and button on button click toggle css for textbox please choose reactjs.\r\n\r\nimport React from 'react'\r\n\r\nclass TextBoxToggle extends React.Component{\r\n\tconstructor(props){\r\n  \tsuper(props);\r\n    \r\n    this.state ={\r\n    \ttoggle:false\r\n    }\r\n    \r\n    this.onToggle=this.onToggle.bind(this);\r\n  }\r\n  \r\n  onToggle(){\r\n  if(this.state.toggle){\r\n  \tthis.setState({\r\n    toggle:false\r\n    })\r\n    }else{\r\n      \tthis.setState({a\r\n    \t\ttoggle:true\r\n    \t\t})\r\n    \t}\r\n  }\r\n\r\n\trender(){\r\n\t\treturn(\r\n    <div>\r\n    <button onClick={()=>this.onToggle()}> toggle <button/>\r\n    <input style={this.state.toggle?{{border:'5px'}}:'' }><input/>\r\n    <div/>\r\n\t\t)\r\n\t}\r\n}\r\n*/","map":{"version":3,"sources":["C:\\SF.Code\\myCrudApp\\client\\src\\services\\lyricService.js"],"names":["axios","create","data","url","config","method","then","responseSuccess","catch","responseError","getAll","getById","id","get","update","deleteById","response","console","log","error","errors","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAClB,MAAMC,GAAG,GAAE,mCAAX;AAEA,MAAMC,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,MADE;AAETH,IAAAA,IAAI,EAACA,IAFI,CAGT;;AAHS,GAAb;AAMA,SAAOF,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,SAASC,MAAT,GAAkB;AACd,MAAMP,GAAG,GAAE,mCAAX;AAEA,MAAMC,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,KADE,CAET;;AAFS,GAAb;AAKA,SAAOL,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,SAASE,OAAT,CAAiBC,EAAjB,EAAqB;AACjB,MAAMT,GAAG,GAAG,uCAAuCS,EAAnD;AAEA,SAAOZ,KAAK,CAACa,GAAN,CAAUV,GAAV,EACFG,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,SAASK,MAAT,CAAgBF,EAAhB,EAAoBV,IAApB,EAA0B;AACtB,MAAMC,GAAG,GAAE,uCAAqCS,EAAhD;AAEA,MAAMR,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,KADE;AAETH,IAAAA,IAAI,EAACA;AAFI,GAAb;AAIA,SAAOF,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,SAASM,UAAT,CAAoBH,EAApB,EAAwB;AACpB,MAAMT,GAAG,GAAE,uCAAqCS,EAAhD;AAEA,MAAMR,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC;AADE,GAAb;AAGA,SAAOL,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,IAAMF,eAAe,GAAG,SAAlBA,eAAkB,CAAAS,QAAQ,EAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAOA,QAAQ,CAACd,IAAhB;AACH,CAHD;;AAKA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAU,KAAK,EAAI;AAC3B,MAAIA,KAAK,IAAIA,KAAK,CAACH,QAAf,IAA2BG,KAAK,CAACH,QAAN,CAAed,IAA1C,IAAkDiB,KAAK,CAACH,QAAN,CAAed,IAAf,CAAoBkB,MAA1E,EAAkF;AAC9EH,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACH,QAAN,CAAed,IAAf,CAAoBkB,MAAhC;AACH,GAFD,MAEO;AACHH,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;;AACD,SAAOE,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH,CAPD;;AAQA,SAAQlB,MAAR,EAAgBS,MAAhB,EAAwBC,OAAxB,EAAgCG,MAAhC,EAAuCC,UAAvC;AAEA","sourcesContent":["import axios from 'axios';\r\n\r\nfunction create(data) {\r\n    const url= 'http://localhost:49694/api/lyrics'\r\n    \r\n    const config={\r\n        method:'POST',\r\n        data:data,\r\n        //withCredentials: true\r\n\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nfunction getAll() {\r\n    const url= 'http://localhost:49694/api/lyrics'\r\n    \r\n    const config={\r\n        method:'GET',\r\n        //withCredentials: true\r\n\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nfunction getById(id) {\r\n    const url = 'http://localhost:49694/api/lyrics/' + id\r\n\r\n    return axios.get(url)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nfunction update(id, data) {\r\n    const url= 'http://localhost:49694/api/lyrics/'+id\r\n    \r\n    const config={\r\n        method:'PUT',\r\n        data:data\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nfunction deleteById(id) {\r\n    const url= 'http://localhost:49694/api/lyrics/'+id\r\n    \r\n    const config={\r\n        method:'DELETE',\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nconst responseSuccess = response => {\r\n    console.log(response);\r\n    return response.data\r\n}\r\n\r\nconst responseError = error => {\r\n    if (error && error.response && error.response.data && error.response.data.errors) {\r\n        console.log(error.response.data.errors)\r\n    } else {\r\n        console.log(error);\r\n    }\r\n    return Promise.reject(error);\r\n}\r\nexport {create, getAll, getById,update,deleteById}\r\n\r\n/*\r\nsplit an array and add the splitted items at end of the array\r\nexample {2,3,4,5,6}\r\n{4,5,6,2,3}\r\n\r\nlet returnArray=[];\r\nfor (let i=2; i<array.length;i++){\r\n\treturnArray.push(array[i])\r\n}\r\n\r\nreturnArray.push(array[0]);\r\nreturnArray.push(array[1]);\r\n\r\nreturn returnArray;\r\n\r\nO(n)\r\n\r\nCan you create a component with text box and button on button click toggle css for textbox please choose reactjs.\r\n\r\nimport React from 'react'\r\n\r\nclass TextBoxToggle extends React.Component{\r\n\tconstructor(props){\r\n  \tsuper(props);\r\n    \r\n    this.state ={\r\n    \ttoggle:false\r\n    }\r\n    \r\n    this.onToggle=this.onToggle.bind(this);\r\n  }\r\n  \r\n  onToggle(){\r\n  if(this.state.toggle){\r\n  \tthis.setState({\r\n    toggle:false\r\n    })\r\n    }else{\r\n      \tthis.setState({a\r\n    \t\ttoggle:true\r\n    \t\t})\r\n    \t}\r\n  }\r\n\r\n\trender(){\r\n\t\treturn(\r\n    <div>\r\n    <button onClick={()=>this.onToggle()}> toggle <button/>\r\n    <input style={this.state.toggle?{{border:'5px'}}:'' }><input/>\r\n    <div/>\r\n\t\t)\r\n\t}\r\n}\r\n*/ "]},"metadata":{},"sourceType":"module"}