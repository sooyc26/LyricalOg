{"ast":null,"code":"import axios from 'axios';\n\nfunction create(data) {\n  var url = 'http://localhost:49694/api/record';\n  var config = {\n    method: 'POST',\n    data: data\n  };\n  return axios(url, config).then(responseSuccess).catch(responseError);\n}\n\nfunction uploadFile(responseData, uploadFile) {\n  debugger;\n  var s3UploadURL = responseData.SignedUrl;\n  var header = {\n    headers: {\n      'Content-Type': uploadFile.blob.type\n    }\n  };\n  var promise = axios.put(s3UploadURL, uploadFile, header).then(function (response) {\n    console.log(response);\n    return response;\n  }).catch(responseError);\n  return promise;\n}\n\nvar responseSuccess = function responseSuccess(response) {\n  console.log(response);\n  return response.data;\n};\n\nvar responseError = function responseError(error) {\n  if (error && error.response && error.response.data && error.response.data.errors) {\n    console.log(error.response.data.errors);\n  } else {\n    console.log(error);\n  }\n\n  return Promise.reject(error);\n};\n\nexport { create, uploadFile };","map":{"version":3,"sources":["C:\\SF.Code\\myCrudApp\\client\\src\\services\\recordService.js"],"names":["axios","create","data","url","config","method","then","responseSuccess","catch","responseError","uploadFile","responseData","s3UploadURL","SignedUrl","header","headers","blob","type","promise","put","response","console","log","error","errors","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AAClB,MAAMC,GAAG,GAAE,mCAAX;AAEA,MAAMC,MAAM,GAAC;AACTC,IAAAA,MAAM,EAAC,MADE;AAETH,IAAAA,IAAI,EAACA;AAFI,GAAb;AAKA,SAAOF,KAAK,CAACG,GAAD,EAAMC,MAAN,CAAL,CACFE,IADE,CACGC,eADH,EAEFC,KAFE,CAEIC,aAFJ,CAAP;AAGH;;AAED,SAASC,UAAT,CAAoBC,YAApB,EAAkCD,UAAlC,EAA8C;AAC9C;AACI,MAAME,WAAW,GAAGD,YAAY,CAACE,SAAjC;AAEA,MAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgBL,UAAU,CAACM,IAAX,CAAgBC;AAD3B;AADE,GAAf;AAMA,MAAMC,OAAO,GAAGlB,KAAK,CAACmB,GAAN,CAAUP,WAAV,EAAuBF,UAAvB,EAAmCI,MAAnC,EACXR,IADW,CACN,UAAAc,QAAQ,EAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAP;AACH,GAJW,EAKXZ,KALW,CAKLC,aALK,CAAhB;AAOA,SAAOS,OAAP;AACH;;AACD,IAAMX,eAAe,GAAG,SAAlBA,eAAkB,CAAAa,QAAQ,EAAI;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAOA,QAAQ,CAAClB,IAAhB;AACH,CAHD;;AAKA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAc,KAAK,EAAI;AAC3B,MAAIA,KAAK,IAAIA,KAAK,CAACH,QAAf,IAA2BG,KAAK,CAACH,QAAN,CAAelB,IAA1C,IAAkDqB,KAAK,CAACH,QAAN,CAAelB,IAAf,CAAoBsB,MAA1E,EAAkF;AAC9EH,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACH,QAAN,CAAelB,IAAf,CAAoBsB,MAAhC;AACH,GAFD,MAEO;AACHH,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;;AACD,SAAOE,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH,CAPD;;AAQA,SAAQtB,MAAR,EAAeS,UAAf","sourcesContent":["import axios from 'axios'\r\n\r\nfunction create(data) {\r\n    const url= 'http://localhost:49694/api/record'\r\n    \r\n    const config={\r\n        method:'POST',\r\n        data:data,\r\n\r\n    }\r\n    return axios(url, config)\r\n        .then(responseSuccess)\r\n        .catch(responseError)\r\n}\r\n\r\nfunction uploadFile(responseData, uploadFile) {\r\ndebugger\r\n    const s3UploadURL = responseData.SignedUrl;\r\n\r\n    const header = {\r\n        headers: {\r\n            'Content-Type': uploadFile.blob.type\r\n        }\r\n    }\r\n\r\n    const promise = axios.put(s3UploadURL, uploadFile, header)\r\n        .then(response => {\r\n            console.log(response);\r\n            return response\r\n        })\r\n        .catch(responseError);\r\n\r\n    return promise;\r\n}\r\nconst responseSuccess = response => {\r\n    console.log(response);\r\n    return response.data\r\n}\r\n\r\nconst responseError = error => {\r\n    if (error && error.response && error.response.data && error.response.data.errors) {\r\n        console.log(error.response.data.errors)\r\n    } else {\r\n        console.log(error);\r\n    }\r\n    return Promise.reject(error);\r\n}\r\nexport {create,uploadFile}"]},"metadata":{},"sourceType":"module"}