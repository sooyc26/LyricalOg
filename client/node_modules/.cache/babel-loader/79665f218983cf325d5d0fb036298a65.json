{"ast":null,"code":"import _classCallCheck from \"C:\\\\SF.Code\\\\myCrudApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SF.Code\\\\myCrudApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SF.Code\\\\myCrudApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SF.Code\\\\myCrudApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SF.Code\\\\myCrudApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\SF.Code\\\\myCrudApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\SF.Code\\\\myCrudApp\\\\client\\\\src\\\\lyrics\\\\lyricsList.js\";\nimport React, { Component } from 'react';\nimport * as lyricService from '../services/lyricService';\n\nvar LyricsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LyricsList, _React$Component);\n\n  function LyricsList(props) {\n    var _this;\n\n    _classCallCheck(this, LyricsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LyricsList).call(this, props));\n    _this.state = {\n      items: []\n    };\n    _this.getLyrics = _this.getLyrics.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LyricsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.getLyrics();\n    }\n  }, {\n    key: \"getLyrics\",\n    value: function getLyrics() {\n      var _this2 = this;\n\n      lyricService.getAll().then(function (response) {\n        _this2.setState({\n          items: response.items\n        });\n      }).catch(console.log.error);\n    }\n  }, {\n    key: \"redner\",\n    value: function redner() {\n      // const lyricsList = this.state.items.map((item) => {\n      //     return (\n      //         <div>\n      //             <li>{item.id}</li>\n      //             <li>{item.lyrics}</li>\n      //         </div>\n      //     )\n      // })\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LyricsList;\n}(React.Component);\n\nexport default LyricsList;","map":{"version":3,"sources":["C:\\SF.Code\\myCrudApp\\client\\src\\lyrics\\lyricsList.js"],"names":["React","Component","lyricService","LyricsList","props","state","items","getLyrics","bind","getAll","then","response","setState","catch","console","log","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,YAAZ,MAA8B,0BAA9B;;IAEOC,U;;;;;AAEH,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AANe;AAOlB;;;;wCAEmB,CAChB;AACH;;;gCAEW;AAAA;;AACRN,MAAAA,YAAY,CAACO,MAAb,GACKC,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,QAAA,MAAI,CAACC,QAAL,CAAc;AACVN,UAAAA,KAAK,EAAEK,QAAQ,CAACL;AADN,SAAd;AAGH,OALL,EAMKO,KANL,CAMWC,OAAO,CAACC,GAAR,CAAYC,KANvB;AAOH;;;6BAEQ;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;;;;EAxCqBhB,KAAK,CAACC,S;;AA0ChC,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport * as lyricService from '../services/lyricService'\r\n\r\n class LyricsList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: []\r\n        }\r\n        this.getLyrics = this.getLyrics.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.getLyrics();\r\n    }\r\n\r\n    getLyrics() {\r\n        lyricService.getAll()\r\n            .then(response => {\r\n                this.setState({\r\n                    items: response.items\r\n                })\r\n            })\r\n            .catch(console.log.error);\r\n    }\r\n\r\n    redner() {\r\n\r\n        // const lyricsList = this.state.items.map((item) => {\r\n        //     return (\r\n        //         <div>\r\n        //             <li>{item.id}</li>\r\n        //             <li>{item.lyrics}</li>\r\n        //         </div>\r\n        //     )\r\n        // })\r\n        return (\r\n            <div>\r\n                {/* {lyricsList} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LyricsList"]},"metadata":{},"sourceType":"module"}